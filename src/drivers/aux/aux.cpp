#include <drivers/aux/aux.hpp>

namespace AUX
{
    reg32_ptr_t IRQ_ADDR_PTR = AUX_REG_PTR(IRQ_OFFSET);
    reg32_ptr_t ENABLES_ADDR_PTR = AUX_REG_PTR(ENABLES_OFFSET);

    reg32_ptr_t MU_IO_REG_ADDR_PTR = AUX_REG_PTR(MU_IO_REG_OFFSET);
    reg32_ptr_t MU_IER_REG_ADDR_PTR = AUX_REG_PTR(MU_IER_REG_OFFSET);
    reg32_ptr_t MU_IIR_REG_ADDR_PTR = AUX_REG_PTR(MU_IIR_REG_OFFSET);
    reg32_ptr_t MU_LCR_REG_ADDR_PTR = AUX_REG_PTR(MU_LCR_REG_OFFSET);
    reg32_ptr_t MU_MCR_REG_ADDR_PTR = AUX_REG_PTR(MU_MCR_REG_OFFSET);
    reg32_ptr_t MU_LSR_REG_ADDR_PTR = AUX_REG_PTR(MU_LSR_REG_OFFSET);
    reg32_ptr_t MU_MSR_REG_ADDR_PTR = AUX_REG_PTR(MU_MSR_REG_OFFSET);
    reg32_ptr_t MU_SCRATCH_ADDR_PTR = AUX_REG_PTR(MU_SCRATCH_OFFSET);
    reg32_ptr_t MU_CNTL_REG_ADDR_PTR = AUX_REG_PTR(MU_CNTL_REG_OFFSET);
    reg32_ptr_t MU_STAT_REG_ADDR_PTR = AUX_REG_PTR(MU_STAT_REG_OFFSET);
    reg32_ptr_t MU_BAUD_REG_ADDR_PTR = AUX_REG_PTR(MU_BAUD_REG_OFFSET);

    reg32_ptr_t SPI0_CNTL0_REG_ADDR_PTR = AUX_REG_PTR(SPI0_CNTL0_REG_OFFSET);
    reg32_ptr_t SPI0_CNTL1_REG_ADDR_PTR = AUX_REG_PTR(SPI0_CNTL1_REG_OFFSET);
    reg32_ptr_t SPI0_STAT_REG_ADDR_PTR = AUX_REG_PTR(SPI0_STAT_REG_OFFSET);
    reg32_ptr_t SPI0_IO_REG_ADDR_PTR = AUX_REG_PTR(SPI0_IO_REG_OFFSET);
    reg32_ptr_t SPI0_PEEK_REG_ADDR_PTR = AUX_REG_PTR(SPI0_PEEK_REG_OFFSET);

    reg32_ptr_t SPI1_CNTL0_REG_ADDR_PTR = AUX_REG_PTR(SPI1_CNTL0_REG_OFFSET);
    reg32_ptr_t SPI1_CNTL1_REG_ADDR_PTR = AUX_REG_PTR(SPI1_CNTL1_REG_OFFSET);
    reg32_ptr_t SPI1_STAT_REG_ADDR_PTR = AUX_REG_PTR(SPI1_STAT_REG_OFFSET);
    reg32_ptr_t SPI1_IO_REG_ADDR_PTR = AUX_REG_PTR(SPI1_IO_REG_OFFSET);
    reg32_ptr_t SPI1_PEEK_REG_ADDR_PTR = AUX_REG_PTR(SPI1_PEEK_REG_OFFSET);

    void init()
    {

        constexpr uintptr_t IRQ_ENABLE1 = 0x3F00B210;
        reg32_ptr_t irq_enable1 = reinterpret_cast<reg32_ptr_t>(IRQ_ENABLE1);
        *irq_enable1 |= (1 << 29);
    }
} // namespace AUX
